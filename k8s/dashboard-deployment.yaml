apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-dashboard
  namespace: iot-system
  labels:
    app: iot-predictive-maintenance
    component: dashboard
spec:
  replicas: 3  # Horizontal scaling
  selector:
    matchLabels:
      app: iot-predictive-maintenance
      component: dashboard
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: iot-predictive-maintenance
        component: dashboard
    spec:
      containers:
      - name: dashboard
        image: iot-predictive-maintenance:latest  # Replace with your registry
        imagePullPolicy: Always
        ports:
        - containerPort: 8050
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: LOG_LEVEL
        - name: DATABASE_URI
          value: "postgresql://$(DB_USER):$(DB_PASSWORD)@postgres-service:5432/iot_telemetry"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: iot-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iot-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iot-secrets
              key: REDIS_PASSWORD
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: MLFLOW_TRACKING_URI
        - name: DASHBOARD_PORT
          valueFrom:
            configMapKeyRef:
              name: iot-config
              key: DASHBOARD_PORT
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /var/log/iot-system
        - name: config-volume
          mountPath: /app/config/config.production.yaml
          subPath: config.production.yaml
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: iot-data-pvc
      - name: models-storage
        persistentVolumeClaim:
          claimName: iot-models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: iot-logs-pvc
      - name: config-volume
        configMap:
          name: iot-config-file

---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
  namespace: iot-system
  labels:
    app: iot-predictive-maintenance
    component: dashboard
spec:
  type: LoadBalancer  # Change to NodePort or ClusterIP as needed
  ports:
  - port: 80
    targetPort: 8050
    protocol: TCP
    name: http
  selector:
    app: iot-predictive-maintenance
    component: dashboard

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dashboard-hpa
  namespace: iot-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: iot-dashboard
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
